<?xml version="1.0" encoding="UTF-8"?>
<?asciidoc-toc?>
<?asciidoc-numbered?>
<article xmlns="http://docbook.org/ns/docbook" xmlns:xl="http://www.w3.org/1999/xlink" version="5.0" xml:lang="en">
<info>
<title>Напредно програмирање </title>
<subtitle>Аудиториски вежби 1</subtitle>
<date>2016-09-14</date>
<author>
<personname>
<firstname>М-р</firstname>
<othername>Томче</othername>
<surname>Делев</surname>
</personname>
<email>tdelev@finki.ukim.mk</email>
</author>
<authorinitials>МТД</authorinitials>
</info>
<section xml:id="Што-е-eclipse">
<title>Што е Eclipse?</title>
<simpara>Eclipse претставува интегрирана околина за развој (IDE) за програмскиот јазик
Java. Денес претставува водечка околина за развој за Java со опфатен дел од
пазарот од приближно 65%.</simpara>
<simpara>Eclipse е создаден од Open Source заедницата и се користи во повеќе различни
области, пр. како развојна околина за Java или Android апликации.
Развојот на Eclipse датира од 2001.</simpara>
<simpara>Eclipse Open Source заедницата има преку 200 Open Source проекти во
повеќе различни аспекти од развојот на софтвер.</simpara>
<simpara>Сите Eclipse проекти ги води <emphasis>Eclipse Foundation</emphasis>. Тоа е не профитна
организација, поддржана од своите членови со цел да хостира Eclipse Open Source
проекти и да помага во созревањето на Open Source заедницата и како
комплементарен екосистем на производи и сервиси.</simpara>
<simpara>Eclipse IDE може да се прошири со додатни софтверски компоненти кои се
нарекуваат <emphasis>plug-ins</emphasis>. Притоа постојат повеќе Open Source проекти од
различни компании кои го имаат проширено Eclipse IDE.</simpara>
<simpara>Eclipse може да се користи и како основа за креирање на апликации со помош на
Eclipse Rich Client Platform (<emphasis>Eclipse RCP</emphasis>) за апликации.</simpara>
</section>
<section xml:id="eclipse-public-license">
<title>Eclipse Public License</title>
<simpara><emphasis role="strong"><emphasis>Eclipse Public License</emphasis></emphasis> (EPL) е Open Source софтверска лиценца која ја
користи <emphasis>Eclipse Foundation</emphasis> за нејзиниот софтвер. EPL е дизајнирана да
биде соодветна за бизнисите со тоа што EPL лиценцираните програми може да се
користат, модификуваат, копираат и дистрибуираат слободно и без да се плаќа.</simpara>
</section>
<section xml:id="Инсталација-на-eclipse">
<title>Инсталација на Eclipse</title>
<section xml:id="java-побарување-на-eclipse">
<title>Java побарување на Eclipse</title>
<simpara>Eclipse има потреба од инсталирана Java Runtime околина, односно минмум Java
5 за да се извршува. Притоа препорачливо е користење на Java верзија 6 или
повисока.</simpara>
<simpara>Eclipse IDE содржи сопствен Java компајлер. За компајлирање изворен
код надвор од Eclipse потребни се <emphasis role="strong">Java Development Tools</emphasis>.</simpara>
</section>
<section xml:id="Инсталација-на-java">
<title>Инсталација на Java</title>
<simpara>Java можеби е веќе инсталирана на вашата машина. Ова може да се провери со
отворање на конзола (ако сте на Windows: <literal>Win+R</literal>, внесете <literal>cmd</literal> и
притиснете <literal>Enter</literal>) и впишување на следната команда:</simpara>
<programlisting language="shell" linenumbering="unnumbered">java -version</programlisting>
<simpara>Ако Java е соодветно инсталирана, треба да видите информации за тоа. Ако
командната линија врати резултат дека програмата не може да се најде, треба да
инсталирате Java.</simpara>
<simpara>Google пребарување за "How to install JDK on YOUR_OS" треба
да врати резултати со линкови со помош. Заменете го <literal>YOUR_OS</literal> со
вашиот оперативен систем, пр. Windows, Ubuntu, Mac OS X, итн.</simpara>
</section>
<section xml:id="download-eclipse">
<title>Download Eclipse</title>
<simpara><link xl:href="http://www.eclipse.org">www.eclipse.org</link> веб сајтот содржи запакувани инсталации на Eclipse дистрибуции.</simpara>
<simpara>Симнете го <emphasis role="strong">Eclipse IDE for Java Developers</emphasis> пакетот од следното URL:
<literal><link xl:href="http://www.eclipse.org/downloads">http://www.eclipse.org/downloads</link></literal></simpara>
<simpara>На следните слики е прикажан сајтот на Eclipse за симнување на за на Linux
систем.</simpara>
<figure xml:id="donwload">
<title>Eclipse Download страница</title>
<mediaobject>
<imageobject>
<imagedata fileref="./images/download.png"/>
</imageobject>
<textobject><phrase>download</phrase></textobject>
</mediaobject>
</figure>
<simpara>Содржината на симнувањето е <literal>.zip</literal> датотека.</simpara>
</section>
<section xml:id="Инсталација-на-eclipse-2">
<title>Инсталација на Eclipse</title>
<simpara>Откако ќе ја симнете <literal>.zip</literal> датотеката која ја содржи Eclipse
дистрибуцијата едниствено треба да ја отпакувате во посакуваниот локален
директориум.</simpara>
<warning>
<simpara>Употеребете директориум во чија патека нема празни места, затоа што Eclipse
понекогаш има проблем со тоа.</simpara>
</warning>
<simpara>По отпакувањето може да го користите Eclipse. Нема потреба од дополнителни
инсталации.</simpara>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
</section>
<section xml:id="Работа-со-eclipse">
<title>Работа со Eclipse</title>
<section xml:id="Стартување-eclipse">
<title>Стартување Eclipse</title>
<simpara>Стартувајте го Eclipse со двоен-клик на датотеката <literal>eclipse.exe</literal>
(Microsoft Windows) или <literal>eclipse</literal> (Linux / Mac) во директориумот кој го
отпакувавте Eclipse.</simpara>
<figure xml:id="workspace">
<title>Избор на Workspace</title>
<mediaobject>
<imageobject>
<imagedata fileref="./images/workspace.png"/>
</imageobject>
<textobject><phrase>workspace</phrase></textobject>
</mediaobject>
</figure>
<simpara>Системот ќе побара да изберете <literal>workspace</literal> (<xref linkend="workspace"/>).
<literal>Workspace</literal> е местото каде што ќе работите. Изберете
празен директориум и притиснете на копчето OK.</simpara>
<simpara>Eclipse ќе се стартува и ќе прикаже Welcome страница. Затворете ја оваа
страница.</simpara>
<figure xml:id="welcome">
<title>Затворање на Eclipse welcome screen</title>
<mediaobject>
<imageobject>
<imagedata fileref="./images/welcome.png"/>
</imageobject>
<textobject><phrase>welcome</phrase></textobject>
</mediaobject>
</figure>
<simpara>Откако ќе го затворите почетниот екран треба да видите екран сличен на следниот:</simpara>
<figure xml:id="screen">
<title>Почетен Eclipse поглед</title>
<mediaobject>
<imageobject>
<imagedata fileref="./images/screen.png"/>
</imageobject>
<textobject><phrase>screen</phrase></textobject>
</mediaobject>
</figure>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
</section>
<section xml:id="Преглед-на-eclipse-корисничкиот-интерфејс">
<title>Преглед на Eclipse корисничкиот интерфејс</title>
<simpara>Eclipse е составен од <emphasis role="strong">Perspectives</emphasis>, <emphasis role="strong">Views</emphasis> и <emphasis role="strong">Editors</emphasis>.
<emphasis role="strong">Views</emphasis> и <emphasis role="strong">Editors</emphasis> се групирани во <emphasis role="strong">Perspectives</emphasis>.</simpara>
<section xml:id="workspace-2">
<title>Workspace</title>
<simpara><emphasis role="strong">Workspace</emphasis> е физичката локација (патеката на датотеките) со кои работите.
Вашите проекти, изворни датотеки, слики и други артефакти може да се чуваат во
вашиот работен простор, но исто така може да референцирате и надворешни ресурси
(пр. проекти).</simpara>
<simpara>Може да изберете работен простор на стартување на Eclipse или преку мени (<literal>File &#8594;
Switch Workspace &#8594; Others</literal>).</simpara>
</section>
<section xml:id="parts">
<title>Parts</title>
<simpara><emphasis role="strong">Parts</emphasis> се компоненти од корисничкиот интерфејс кои овозможуваат да
навигирате и модификувате податоци. Вообичаено поделени во <emphasis role="strong">Views</emphasis> и
<emphasis role="strong">Editors</emphasis>.</simpara>
<figure xml:id="parts">
<title>Eclipse апликација со неколку делови</title>
<mediaobject>
<imageobject>
<imagedata fileref="./images/parts.png"/>
</imageobject>
<textobject><phrase>parts</phrase></textobject>
</mediaobject>
</figure>
<simpara>Раздвојувањето на <emphasis role="strong">Views</emphasis> и <emphasis role="strong">Editors</emphasis> примарно не е базирано на
технички разлики, туку на различни концепти на користење и нивно уредување.</simpara>
<simpara><emphasis role="strong">View</emphasis> вообичаено се користи за работа со податоци, кои може да се во
хиерархиска структура. Ако податоците се променат преку <emphasis role="strong">View</emphasis>, оваа
промена вообичаено директно се применува на податочната структура под неа.
<emphasis role="strong">View</emphasis> понекогаш овозможува да се отвори <emphasis role="strong">Editor</emphasis> за избрано множество
податоци.</simpara>
<simpara>Пример за <emphasis role="strong">View</emphasis> е <emphasis role="strong">Java Package Explorer</emphasis>, кој овозможува да се
прелистуваат датотеките во Eclipse проектите. Ако промените податоци во Package
Explorer, на пр. промените име на датотека, ова име директно се менува и во
податочниот систем.</simpara>
<simpara><emphasis role="strong">Editors</emphasis> вообичаено се употребуваат за менување единечен податочен
елемент, пр. датотека или податочен објект. За да се применат овие промени,
потребно е корисникот експлицитно да ја зачуваа содржината од едиторот.</simpara>
<simpara><emphasis role="strong">Editors</emphasis> традиционално се позиционирани во одредена област, наречена
<emphasis role="strong">editor area</emphasis>.</simpara>
</section>
<section xml:id="perspective">
<title>Perspective</title>
<simpara><emphasis role="strong">Perspective</emphasis> е визуелен контејнер на множество од делови <emphasis role="strong">Parts</emphasis>.
Eclipse IDE користи <emphasis role="strong">Perspectives</emphasis> за да ги уреди <emphasis role="strong">Parts</emphasis> за
различни задачи при развој. <emphasis role="strong">Perspectives</emphasis> се менуваат преку менито <literal>Window
&#8594; Open Perspective &#8594; Other</literal> (<xref linkend="perspective"/>).</simpara>
<simpara>Основните перспективи во Eclipse IDE се Java перспективата за развој и
перспективата Debug за дебагирање на Java апликации.</simpara>
<figure xml:id="perspective">
<title>Менување перспективи во Eclipse IDE</title>
<mediaobject>
<imageobject>
<imagedata fileref="./images/perspective.png"/>
</imageobject>
<textobject><phrase>perspective</phrase></textobject>
</mediaobject>
</figure>
<simpara>Може да ги менувате позициите и содржината на деловите во <emphasis role="strong">Perspective</emphasis> со
отварање и затворање или со едноставно уредување со влечење.</simpara>
<figure xml:id="dialog">
<title>Show View дијалог</title>
<mediaobject>
<imageobject>
<imagedata fileref="./images/dialog.png"/>
</imageobject>
<textobject><phrase>dialog</phrase></textobject>
</mediaobject>
</figure>
<simpara>За да отворите нов <emphasis role="strong">Part</emphasis> во вашата тековна <emphasis role="strong">Perspective</emphasis> користете го
менито <literal>Window &#8594; Show View &#8594; Other</literal>. Следниот <literal>Show View</literal> (<xref linkend="dialog"/>)
дијалог ви овозможува да пребарувате одредени Parts.</simpara>
<figure xml:id="save-perspective">
<title>Снимање на вашата перспектива конфигурација</title>
<mediaobject>
<imageobject>
<imagedata fileref="./images/save-perspective.png"/>
</imageobject>
<textobject><phrase>save perspective</phrase></textobject>
</mediaobject>
</figure>
<simpara>Во случаи кога сакате да ја ресетирате вашата тековна перспектива на нејзината
стандардна, можете преку менито <literal>Window &#8594; Reset Perspective</literal>.</simpara>
<simpara>Може да ја снимите вашата <emphasis role="strong">Perspective</emphasis> преку <literal>Window &#8594; Save Perspective
As&#8230;&#8203;</literal> (<xref linkend="save-perspective"/>).</simpara>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
</section>
<section xml:id="Креирање-на-првата-java-програма">
<title>Креирање на првата Java програма</title>
<simpara>Во следните неколку чекори ќе го опишеме процесот на креирање едноставна и
минимална Java програма со користење Eclipse. Вообичаено во светот на
програмирањето оваа програма испишува <literal>Hello World</literal> во конзолата, но ние ќе ја
адаптираме да отпечати <literal>Hello Eclipse!</literal> стандардниот излез.</simpara>
<section xml:id="Креирање-проект">
<title>Креирање проект</title>
<orderedlist numeration="arabic">
<listitem>
<simpara>Изберете од мениот <literal>File &#8594; New &#8594; Java project</literal>.</simpara>
</listitem>
<listitem>
<simpara>Внесете <literal>edu.finki.np.hello</literal> како име на проектот.</simpara>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>Изберете "Create separate folders for sources and class files".</simpara>
</listitem>
</orderedlist>
</listitem>
</orderedlist>
<figure xml:id="project">
<title>Волшебникот за нов Java Project</title>
<mediaobject>
<imageobject>
<imagedata fileref="./images/project.png"/>
</imageobject>
<textobject><phrase>project</phrase></textobject>
</mediaobject>
</figure>
<simpara>Притиснете на копчето Finish за да го креирате проектот. Креиран е нов проект и
е прикажан како директориум. Отворете го <literal>edu.finki.np.hello</literal> и
прегледајте ја неговата содржина.</simpara>
</section>
<section xml:id="Креирање-пакети">
<title>Креирање пакети</title>
<simpara>Во следниот чекор ќе креирате нов <literal>package</literal>. Добра конвенција е да
користите исто име за проектот и пакетот на највисоко ниво.</simpara>
<simpara>Да креирате пакет <literal>edu.finki.np.hello</literal>, изберете го фолдерот
<literal>src</literal> и со десен клик на него изберете <literal>New &#8594; Package</literal>.</simpara>
<figure xml:id="package">
<title>Десен клик за креирање пакет</title>
<mediaobject>
<imageobject>
<imagedata fileref="./images/package.png"/>
</imageobject>
<textobject><phrase>package</phrase></textobject>
</mediaobject>
</figure>
<simpara>Внесете го името на новиот пакет во дијалогот.</simpara>
<figure xml:id="pkg-name">
<title>Дијалог за креирање пакет</title>
<mediaobject>
<imageobject>
<imagedata fileref="./images/pkg_name.png"/>
</imageobject>
<textobject><phrase>pkg name</phrase></textobject>
</mediaobject>
</figure>
</section>
<section xml:id="Креирање-java-класа">
<title>Креирање Java класа</title>
<simpara>Десен клик на пакетот и изберете <literal>New &#8594; Class</literal>.</simpara>
<figure xml:id="add-class">
<title>Избор за креирање нова класа</title>
<mediaobject>
<imageobject>
<imagedata fileref="./images/add-class.png"/>
</imageobject>
<textobject><phrase>add class</phrase></textobject>
</mediaobject>
</figure>
<simpara>Внесете <literal>MyFirstClass1</literal> како име на класата и изберете го
<literal>public static void main (String{[}{]} args)</literal>.</simpara>
<figure>
<title>Избор за креирање нова класа</title>
<mediaobject>
<imageobject>
<imagedata fileref="./images/new-class.png"/>
</imageobject>
<textobject><phrase>new class</phrase></textobject>
</mediaobject>
</figure>
<simpara>Ова создава нова датотека и ја отвара во <emphasis role="strong">Editor</emphasis> за Java изворни
датотеки.</simpara>
<programlisting language="java" linenumbering="unnumbered">package edu.finki.np.first;

public class MyFirstClass {

  public static void main(String[] args) {
    System.out.println("Hello Eclipse!");
  }

}</programlisting>
</section>
<section xml:id="Извршување-на-проект-во-eclipse">
<title>Извршување на проект во Eclipse</title>
<simpara>За да го извршите кодот, со десен клик на вашата Java класа изберете
<literal>Run-as &#8594; Java application</literal>.</simpara>
<figure>
<title>Ивршување проект</title>
<mediaobject>
<imageobject>
<imagedata fileref="./images/run.png"/>
</imageobject>
<textobject><phrase>run</phrase></textobject>
</mediaobject>
</figure>
<simpara>Eclipse ќе ја изврши вашата Java програма. Треба да го видите следниот излез во
конзола <emphasis role="strong">View</emphasis>.</simpara>
<informalfigure>
<mediaobject>
<imageobject>
<imagedata fileref="./images/result.png"/>
</imageobject>
<textobject><phrase>result</phrase></textobject>
</mediaobject>
</informalfigure>
<formalpara>
<title>Резултат од извршување на апликацијата</title>
<para>Честитки! Го креиравте вашиот прв Java проект, пакет и Java класа и ја извршивте
оваа програма во Eclipse.</para>
</formalpara>
</section>
</section>
<section xml:id="Извршување-java-програма-надвор-од-eclipse">
<title>Извршување Java програма надвор од Eclipse</title>
<section xml:id="Креирање-на-jar-датотека">
<title>Креирање на jar датотека</title>
<simpara>За да извршите Java програма надвор од Eclipse треба да ја експортирате како
<literal>jar</literal> датотека. <literal>jar</literal> датотека е стандарден формат за дистрибуција
на Java апликации.</simpara>
<simpara>Изберете го вашиот проект, десен клик и изберете <literal>Export</literal>.</simpara>
<informalfigure>
<mediaobject>
<imageobject>
<imagedata fileref="./images/export.png"/>
</imageobject>
<textobject><phrase>export</phrase></textobject>
</mediaobject>
</informalfigure>
<formalpara>
<title>Волшебник за експортирање на Java проект</title>
<para>Изберете JAR датотека, изберете next. Изберете го вашиот проект и изберете си
дестинација и име за jar датотеката. Пример <literal>myprogram.jar</literal>.</para>
</formalpara>
<informalfigure>
<mediaobject>
<imageobject>
<imagedata fileref="./images/export-jar.png"/>
</imageobject>
<textobject><phrase>export jar</phrase></textobject>
</mediaobject>
</informalfigure>
<figure>
<title>Волшебник за експортирање на Java проект, дел II</title>
<mediaobject>
<imageobject>
<imagedata fileref="./images/wizzard.png"/>
</imageobject>
<textobject><phrase>wizzard</phrase></textobject>
</mediaobject>
</figure>
<formalpara>
<title>Волшебник за експортирање на Java проект, дел III</title>
<para>Честитки!</para>
</formalpara>
</section>
<section xml:id="Извршете-ја-вашата-програма-надвор-од-eclipse">
<title>Извршете ја вашата програма надвор од Eclipse</title>
<simpara>Отворете командна линија.</simpara>
<simpara>Променете ја вашата работна патека со испишување <literal>cd path</literal>. На пример
ако вашиот jar е лоциран во <literal>c:\\temp</literal> испишете <literal>cd c:\\temp</literal>.</simpara>
<simpara>За да ја извршите оваа програма треба да ја вклучите jar датотеката во вашиот
<literal>classpath</literal>. Со <literal>classpath</literal> се дефинираат сите Java класи кои се
овозможени во Java извршната околина. Може да додате <literal>jar</literal> датотека во
classpath со опцијата <literal>-jar</literal>.</simpara>
<screen>java -classpath myprogram.jar edu.finki.np.first.MyFirstClass</screen>
<simpara>Ако ја испиште точно наведената команда и се наоѓате во соодветниот директориум,
треба да видите порака <literal>Hello Eclipse!</literal> во конзолата.</simpara>
<figure>
<title>Извршување апликација надвор од Eclipse</title>
<mediaobject>
<imageobject>
<imagedata fileref="./images/win.png"/>
</imageobject>
<textobject><phrase>win</phrase></textobject>
</mediaobject>
</figure>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
</section>
<section xml:id="content-assist-quick-fix-и-class-navigation">
<title>Content Assist, Quick Fix и Class Navigation</title>
<section xml:id="content-assist">
<title>Content assist</title>
<simpara>Помошникот за содржина ви овозможува да добиете помош во самиот едитор. Може
да се повика со <literal>Ctrl+Space</literal></simpara>
<simpara>На пример испишете <literal>syso</literal> во едиторот на Java изворен код и притиснете
<literal>Ctrl+Space</literal>. Ова ќе го замени <literal>syso</literal> со <literal>System.out.println("")</literal>.</simpara>
<simpara>Ако имате референца кон објект, како на пример објектот <literal>person</literal> од типот
<literal>Person</literal> и сакате да ги видите неговите методи, испишете <literal>person.</literal>
и притиснете <literal>Ctrl+Space</literal>.</simpara>
<figure xml:id="autocomplete">
<title>Помошник во содржината</title>
<mediaobject>
<imageobject>
<imagedata fileref="./images/autocomplete.png"/>
</imageobject>
<textobject><phrase>autocomplete</phrase></textobject>
</mediaobject>
</figure>
</section>
<section xml:id="quick-fix">
<title>Quick Fix</title>
<simpara>Секогаш кога Eclipse детектира некаков проблем, ќе ве го подцрта проблематичниот
текст во едиторот. Изберете го овој текст и притиснете <literal>Ctrl+1</literal>
за да видите можни начини за да го решите овој проблем.</simpara>
<simpara>На пример напишете <literal>myBoolean = true;</literal> Ако myBoolean не е сѐ уште
дефинирана, Eclipse ќе ја означи како грешка. Изберете ја променливата и
притиснете <literal>Ctrl+1</literal>, Eclipse ќе ви предложи креирање на член или
локална променлива.</simpara>
<figure>
<title>Пример со користење Quickfix</title>
<mediaobject>
<imageobject>
<imagedata fileref="./images/quick-fix.png"/>
</imageobject>
<textobject><phrase>quick fix</phrase></textobject>
</mediaobject>
</figure>
<simpara><emphasis role="strong">Quick Fix</emphasis> е многу моќна алатка. Ви овозможува да креирате нови локални
променливи и членови, како и нови методи и класи. Исто така може да додава
<literal>try-catch</literal> изрази околу исклучоците, а може да извршува и доделување на
променливи, како и многу повеќе.</simpara>
</section>
<section xml:id="Отворање-класа">
<title>Отворање класа</title>
<simpara>Може да навигирате помеѓу класите во вашиот проект преку <literal>Package Explorer</literal>
<emphasis role="strong">View</emphasis>.</simpara>
<simpara>Исто така може да ја отворите било која класа ако го позиционирате покажувачот
врз името на класата и притиснете <literal>F3</literal>. Алтернативно но и
многу моќно, може да притиснете <literal>Ctrl+Shift+T</literal>. Ова ќе
ви отворои дијалог во кој може да ја пребарате класата по нејзиното име и да ја
отворите.</simpara>
<figure>
<title>Отворање класа</title>
<mediaobject>
<imageobject>
<imagedata fileref="./images/open-type.png"/>
</imageobject>
<textobject><phrase>open type</phrase></textobject>
</mediaobject>
</figure>
</section>
<section xml:id="Генерирање-код">
<title>Генерирање код</title>
<simpara>Eclipse има неколку можности за генерирање код за вас. Ова може да ви заштеди
значително време при развој.</simpara>
<simpara>На пример Eclipse може да ги препокрие методите од суперкласите и генерира
<literal>toString()</literal>, <literal>hashcode()</literal> и <literal>equals()</literal> методи. Исто така
може да генерира и getter и setter методи за атрибутите во вашата Java класа.</simpara>
<simpara>Овие опции може да се најдата во менито Source.</simpara>
<figure>
<title>Генерирање код</title>
<mediaobject>
<imageobject>
<imagedata fileref="./images/source.png"/>
</imageobject>
<textobject><phrase>source</phrase></textobject>
</mediaobject>
</figure>
<simpara>За да го тестирање генерирањето на код, ќе ја креираме следната класа во
<literal>edu.finki.np.first</literal> проектот.</simpara>
<programlisting language="java" linenumbering="unnumbered">package edu.finki.np.first;

public class Person {
  private String firstName;
  private String lastName;

}</programlisting>
<simpara>Изберете <literal>Source &#8594; Generate Constructor from Fields</literal>, маркирајте ги двете
полиња и притиснете <literal>OK</literal>.</simpara>
<figure xml:id="generate">
<title>Генерирање</title>
<mediaobject>
<imageobject>
<imagedata fileref="./images/generate.png"/>
</imageobject>
<textobject><phrase>generate</phrase></textobject>
</mediaobject>
</figure>
<simpara>Изберете <literal>Source &#8594; Generate Getter and Setter</literal>, изберете ги повторно двете
полиња и притиснете го <literal>OK</literal> копчето.</simpara>
<simpara>Изберете <literal>Source &#8594; Generate toString()</literal>, маркирајте ги повторно двете полиња и
притиснете <literal>OK</literal>.</simpara>
<simpara>Го генериравте следниот код:</simpara>
<programlisting language="java" linenumbering="unnumbered">package edu.finki.np.first;

public class Person {
  private String firstName;
  private String lastName;

  public Person(String firstName, String lastName) {
    super();
    this.firstName = firstName;
    this.lastName = lastName;
  }

  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }

  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }

  @Override
  public String toString() {
    return "Person [firstName=" + firstName + ", lastName=" + lastName
        + "]";
  }

}</programlisting>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
</section>
<section xml:id="refactoring">
<title>Refactoring</title>
<section xml:id="refactoring-во-eclipse">
<title>Refactoring во Eclipse</title>
<simpara>Refactoring is the process of restructuring the code without changing
his behavior. For example renaming a Java class or method is a
refactoring activity.</simpara>
<simpara>Eclipse supports simple refactoring activities, for example renaming or
moving. For example you can select your class, right click on it and
select <literal>Refactor &#8594; Rename to rename your class or method</literal>. Eclipse will
make sure that all calls in your Workspace to your your class or method
will also be renamed.</simpara>
<simpara>The following shows a screenshot for calling the Rename refactoring on a
class.</simpara>
<figure xml:id="refactor">
<title>Renaming a class</title>
<mediaobject>
<imageobject>
<imagedata fileref="./images/refactor.png"/>
</imageobject>
<textobject><phrase>refactor</phrase></textobject>
</mediaobject>
</figure>
</section>
<section xml:id="refactoring-examples">
<title>Refactoring Examples</title>
<simpara>For the next examples change the code of your <literal>MyFirstClass</literal>
class to the following.</simpara>
<programlisting language="java" linenumbering="unnumbered">package de.vogella.eclipse.ide.first;

public class MyFirstClass {

  public static void main(String[] args) {
    System.out.println("Hello Eclipse!");
    int sum = 0;
    for (int i = 0; i &lt;= 100; i++) {
      sum += i;
    }
    System.out.println(sum);
  }
}</programlisting>
<simpara>Another useful refactoring is to mark code and create a method from the
selected code. For this mark the coding of the <literal>for</literal> loop, right click
and select <literal>Refactoring &#8594; Extract Method</literal>. Use <literal>calculateSum</literal> as name of
the new method.</simpara>
<figure xml:id="extract-method">
<title>Extract Method refactoring</title>
<mediaobject>
<imageobject>
<imagedata fileref="./images/extract-method.png"/>
</imageobject>
<textobject><phrase>extract method</phrase></textobject>
</mediaobject>
</figure>
<simpara>The resulting class should look like the following.</simpara>
<programlisting language="java" linenumbering="unnumbered">package de.vogella.eclipse.ide.first;

public class MyFirstClass {

  public static void main(String[] args) {
    System.out.println("Hello Eclipse!");
    int sum = 0;
    sum = calculateSum(sum);
    System.out.println(sum);
  }

  private static int calculateSum(int sum) {
    for (int i = 0; i &lt;= 100; i++) {
      sum += i;
    }
    return sum;
  }
}</programlisting>
<simpara>You can also extract strings and create constants from them. Mark for
this example <literal>Hello Eclipse!</literal>, right click on it and select <literal>Refactor &#8594;
Extract Constant</literal>. Name your new constant <literal>HELLO</literal>.</simpara>
<informalfigure>
<mediaobject>
<imageobject>
<imagedata fileref="./images/constants.png"/>
</imageobject>
<textobject><phrase>constants</phrase></textobject>
</mediaobject>
</informalfigure>
<formalpara>
<title>Extract Constants</title>
<para>The resulting class should look like the following.</para>
</formalpara>
<programlisting language="java" linenumbering="unnumbered">package de.vogella.eclipse.ide.first;

public class MyFirstClass {

  private static final String HELLO = "Hello Eclipse!";

  public static void main(String[] args) {
    System.out.println(HELLO);
    int sum = 0;
    sum = calculateSum(sum);
    System.out.println(sum);
  }

  private static int calculateSum(int sum) {
    for (int i = 0; i &lt;= 100; i++) {
      sum += i;
    }
    return sum;
  }
}</programlisting>
<simpara>Eclipse has much more refactorings, in most cases you should get an idea
of the performed action by the naming of the refactoring operation.</simpara>
<simpara><?asciidoc-pagebreak?></simpara>
</section>
</section>
<section xml:id="eclipse-shortcuts">
<title>Eclipse Shortcuts</title>
<simpara>Eclipse provides a lot of shortcuts to work efficiently with the IDE.
For a list of the most important Eclipse shortcuts please see
<link xl:href="http://www.vogella.com/articles/EclipseShortcuts/article.html">Eclipse Shortcuts</link></simpara>
</section>
<section xml:id="using-jars-libraries">
<title>Using jars (libraries)</title>
<section xml:id="adding-a-library-jar-to-your-project">
<title>Adding a library (.jar) to your project</title>
<simpara>The following describes how to add Java libraries to your project. Java
libraries are distributed via <literal>jar</literal> files. It assumes that you have a
jar file available; if not feel free to skip this step.</simpara>
<simpara>Create a new Java project <literal>de.vogella.eclipse.ide.jars</literal>. Then,
create a new folder called <literal>lib</literal>, by right clicking on your
project and selecting <literal>New &#8594; Folder</literal>.</simpara>
<informalfigure>
<mediaobject>
<imageobject>
<imagedata fileref="./images/folder.png"/>
</imageobject>
<textobject><phrase>folder</phrase></textobject>
</mediaobject>
</informalfigure>
<formalpara>
<title>Creating a new folder</title>
<para>From the menu select <literal>File &#8594; Import &#8594; General &#8594; File System</literal>. Select your
jar and select the <literal>lib</literal> folder as target. Alternatively, just
copy and paste your <literal>jar</literal> file into the <literal>lib</literal> folder.</para>
</formalpara>
<simpara>Right click on your project and select Properties. Under <literal>Java Build Path
&#8594; Libraries</literal> select the <emphasis role="strong">Add JARs button</emphasis>.</simpara>
<simpara>The following example shows how the result would look like, if the
<literal>junit-4.4.jar</literal> file had been added to the project.</simpara>
<figure xml:id="build-path">
<title>Adding a jar to the current project</title>
<mediaobject>
<imageobject>
<imagedata fileref="./images/build-path.png"/>
</imageobject>
<textobject><phrase>build path</phrase></textobject>
</mediaobject>
</figure>
<simpara>Afterwards you can use the classes contained in the <literal>jar</literal> file in
your Java source code.</simpara>
</section>
<section xml:id="attach-source-code-to-a-java-library">
<title>Attach source code to a Java library</title>
<simpara>As said earlier you can open any class via positioning the cursor on the
class in an editor and pressing <literal>F3</literal>. Alternatively, you can
press <literal>Ctrl+Shift+T</literal>. This will show a dialog
in which you can enter the class name to open it.</simpara>
<simpara>If the source code is not available, the editor will show the decompiled
bytecode of that class.</simpara>
<simpara>This happens if you open a class from Java library and the source for
this .jar file is not available. The same happens if you open a class
from the standard Java library without attaching the source code to it.</simpara>
<simpara>To browse the source of a type contained in a library (i.e. .jar file),
you can attach a source archive or source folder to that library.
Afterwards the editor will show the source instead of the bytecode.</simpara>
<simpara>In addition setting the source attachment allows debugging this source
code.</simpara>
<simpara>The Source Attachment dialog can be reached in the Java Build Path page
of a project. To open this page, right click on a project &#8594; <literal>Properties &#8594;
Java Build Path</literal>. On the Libraries tab, expand the library&#8217;s node, select
the Source attachment attribute and press the Edit button.</simpara>
<simpara>In the Location path field, enter the path of an archive or a folder
containing the source.</simpara>
<simpara>The following shows this for the standard Java library. If you have the
Java Development Kit (JDK) installed, you should find the source in the
JDK installation folder. The file is typically called <literal>src.zip</literal>.</simpara>
<figure>
<title>Maintaining the location of the source attachment to an jar</title>
<mediaobject>
<imageobject>
<imagedata fileref="./images/attach.jpg"/>
</imageobject>
<textobject><phrase>attach</phrase></textobject>
</mediaobject>
</figure>
</section>
<section xml:id="add-the-javadoc-for-a-jar">
<title>Add the Javadoc for a jar</title>
<simpara>It is also possible to add Javadoc to a library which you use.</simpara>
<simpara>Download the Javadoc of the jar and put it somewhere in your filesystem.</simpara>
<simpara>Open the Java Build Path page of a project via Right click on a project
&#8594; <literal>Properties &#8594; Java Build Path</literal>. On the Libraries tab expand the
library&#8217;s node, select the <emphasis role="strong"><literal>Javadoc location</literal></emphasis> attribute
and press the Edit button.</simpara>
<simpara>Enter the location to the file which contains the Javadoc.</simpara>
<figure>
<title>Maintain the location to the Javadoc file for a jar file</title>
<mediaobject>
<imageobject>
<imagedata fileref="./images/javadoc.png"/>
</imageobject>
<textobject><phrase>javadoc</phrase></textobject>
</mediaobject>
</figure>
</section>
</section>
</article>