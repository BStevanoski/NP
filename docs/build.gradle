buildscript {
    dependencies {
        classpath("org.asciidoctor:asciidoctorj-pdf:1.5.0-alpha.11")
    }
}

plugins {
    id 'org.asciidoctor.convert' version '1.5.3'
}

group 'np-docs'
version '1.0-SNAPSHOT'

def ATTRIBUTES = [
        'source-highlighter': 'coderay',
        'encoding'          : 'utf-8',
        'imagesdir'         : './images',
        'toc'               : 'left',
        'icons'             : 'font',
        'idprefix'          : '',
        'idseparator'       : '-',
        'pdf-stylesdir'     : 'theme',
        'pdf-style'         : 'finki',
        'pdf-fontsdir'      : 'fonts'
]

def BACKENDS = ['html5', 'pdf']
def SOURCE_DIR = file('src')
def OUTPUT_DIR = file('.')

asciidoctor {
    backends = BACKENDS

    sourceDir = SOURCE_DIR
    outputDir = OUTPUT_DIR

    sources {
        include '*.adoc'
    }

    attributes ATTRIBUTES

    dependsOn "srcZip"
}

task srcZip

(1..5).each { id ->
    task "srcZip${id}"(type: Zip) {
        from('../examples/src/main/java/mk/ukim/finki/np/av' + id)
        excludes = []
        archiveName = "np_av${id}_src.zip"
        destinationDir = file('./sources')
    }
    srcZip.dependsOn "srcZip${id}"
}

task "srcZipExams"(type: Zip) {
    from('../exams/src/main/java/mk/ukim/finki/np/mt1')
    includes = ['TimesTest.java', 'MinAndMax.java', 'ShapesTest.java']
    archiveName = "np_exam_problems_1_src.zip"
    destinationDir = file('./sources')

    srcZip.dependsOn "srcZipExams"
}

fileTree("src")
        .filter {
    it.isFile() && it.name.endsWith('.adoc')
}.files.each {
    file ->
        task "adoc_${file.name}"(type: org.asciidoctor.gradle.AsciidoctorTask) {
            backends = BACKENDS
            sourceDir = SOURCE_DIR
            outputDir = OUTPUT_DIR
            sources {
                include file.name
            }
            attributes ATTRIBUTES

            dependsOn tasks.withType(Zip)
        }
}
